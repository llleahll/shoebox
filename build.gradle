plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.5'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.test'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
	maven { url 'https://jitpack.io' }
}

// QueryDSL 버전 선언
def querydslVersion = "5.0.0"

dependencies {
	// Spring Boot
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-web'

	// MyBatis
	implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:3.0.4'
	testImplementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter-test:3.0.4'

	// Thymeleaf
	implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity6'
	implementation 'nz.net.ultraq.thymeleaf:thymeleaf-layout-dialect:3.1.0'

	// Apache POI (Excel)
	implementation 'org.apache.poi:poi-ooxml:5.2.3'

	// Lombok
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	// Devtools
	developmentOnly 'org.springframework.boot:spring-boot-devtools'

	// Oracle JDBC
	runtimeOnly 'com.oracle.database.jdbc:ojdbc11'

	// Test
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

	// QueryDSL
	implementation "com.querydsl:querydsl-jpa:${querydslVersion}:jakarta"
	annotationProcessor "com.querydsl:querydsl-apt:${querydslVersion}:jakarta"
	annotationProcessor "jakarta.annotation:jakarta.annotation-api"
	annotationProcessor "jakarta.persistence:jakarta.persistence-api"

	// Iamport 결제 연동
	implementation 'com.github.iamport:iamport-rest-client-java:0.2.23'
}

tasks.named('test') {
	useJUnitPlatform()
}

// QueryDSL QClass 생성 경로 설정
def generated = 'src/main/generated'

tasks.withType(JavaCompile).configureEach {
	options.getGeneratedSourceOutputDirectory().set(file(generated))
}

sourceSets {
	main.java.srcDirs += [generated]
}

clean {
	delete file(generated)
}

// Eclipse 사용 시 generated 폴더를 source에 추가 (선택)
eclipse {
	classpath {
		file {
			whenMerged {
				entries += new org.gradle.plugins.ide.eclipse.model.SourceFolder(generated, null)
			}
		}
	}
}
